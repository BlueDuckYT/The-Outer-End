buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
        maven { url "https://repo.spongepowered.org/repository/maven-public/" }

    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: "org.spongepowered", name: "mixingradle", version: "0.7-SNAPSHOT"

    }
}
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '4.0.4'
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java' // java plugin is needed for the shadow plugin to work
apply plugin: 'org.spongepowered.mixin'

version = '0.2.15'
group = 'blueduck.outer_end' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'outer_end'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {

    mappings channel: 'official', version: '1.18.2'


    runs {
        client {
            workingDirectory project.file('run')

            //arg "-mixin.config=outer_end.mixins.json"
            property 'forge.logging.markers', 'REGISTRIES'

           property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'examplemod'

            mods {
                outer_end {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
          //  arg "-mixin.config=outer_end.mixins.json"
            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'outer_end'

            mods {
                outer_end {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')


            property 'forge.logging.markers', 'REGISTRIES'

             property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'outer_end'

            mods {
                outer_end {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'outer_end', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                outer_end {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {

    jcenter()
    maven { url 'https://jitpack.io' }
    mavenCentral()
    maven { url 'https://www.cursemaven.com'}
}

configurations {
    shade
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.18.2-40.1.80'
    annotationProcessor "org.spongepowered:mixin:0.8.5:processor"

    //implementation fg.deobf('org.spongepowered:mixin:0.8.5')

    implementation fg.deobf("curse.maven:ReAuth-237701:4120081")
    implementation fg.deobf("curse.maven:Blueprint-382216:3991478")
    implementation fg.deobf("curse.maven:jei-238222:4062344")
   // runtimeOnly fg.deobf('com.github.GiantLuigi4:AssortedUtils:778fb38151')

   // implementation fg.deobf('com.github.LudoCrypt:Shapes-Api-Forge:1.1.4')
  //  shade 'com.github.LudoCrypt:Shapes-Api-Forge:1.1.4Shadow'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "outer_end",
                "Specification-Vendor"    : "outer_endsareus",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "outer_endsareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}


jar.finalizedBy('reobfJar')


publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}




minecraft {
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
}



//shadowJar {
  //  classifier = ''
   // configurations = [project.configurations.shade]
   // relocate 'com.terraformersmc.terraform.shapes', "shadow.com.terraformersmc.terraform.shapes"
//}

//reobf {
 //   shadowJar {}
//}

//tasks.build.dependsOn reobfShadowJar
//jar.finalizedBy('reobfShadowJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
